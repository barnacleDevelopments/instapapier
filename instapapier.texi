\input texinfo    @c -*- texinfo -*-
@c %**start of header
@setfilename instapapier.info
@settitle Instapapier Manual
@documentencoding UTF-8
@documentlanguage en
@c %**end of header

@copying
This manual is for Instapapier (version 0.0.1).

Copyright @copyright{} 2025 Devin Davis

@quotation
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ``Software''), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
@end quotation
@end copying

@dircategory Emacs
@direntry
* Instapapier: (instapapier). Send URLs to Instapaper from Emacs.
@end direntry

@finalout
@titlepage
@title Instapapier Manual
@subtitle for version 0.0.1
@author Devin Davis
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top Instapapier

Instapapier allows you to send URLs to your Instapaper account directly from
Emacs with ease.

@insertcopying
@end ifnottex

@menu
* Introduction::                What is Instapapier?
* Installation::                How to install Instapapier
* Configuration::               Setting up authentication
* Usage::                       Using Instapapier commands
* Integrations::                Working with other packages
* Troubleshooting::             Common problems and solutions
* API Reference::               Function and variable reference
* Index::                       Complete index
@end menu

@node Introduction
@chapter Introduction

@cindex introduction
@cindex Instapaper
@cindex read later service

Instapapier is an Emacs package that provides seamless integration with
Instapaper, a popular read-it-later service. With Instapapier, you can:

@itemize @bullet
@item
Save URLs to your Instapaper account from anywhere in Emacs
@item
Integrate with elfeed to save RSS feed entries
@item
Use secure credential management via @code{auth-source}
@item
Add URLs interactively or directly from point
@end itemize

@section Requirements

@itemize @bullet
@item
Emacs 24.3 or higher
@item
An Instapaper account (@pxref{Setting Up Instapaper})
@item
Optional: GPG for encrypted credential storage
@end itemize

@node Installation
@chapter Installation

@cindex installation
@cindex package installation

There are several ways to install Instapapier, depending on your package
management preferences.

@menu
* Manual Installation::         Installing from source
* Using straight.el::           Installation with straight.el
* Using use-package::           Installation with use-package
* Spacemacs Installation::      Installing in Spacemacs
* Doom Emacs Installation::     Installing in Doom Emacs
@end menu

@node Manual Installation
@section Manual Installation

@cindex manual installation

The simplest way to install Instapapier is manually:

@enumerate
@item
Clone the repository or download @file{instapapier.el}:

@example
git clone https://github.com/barnacleDevelopments/instapapier
@end example

@item
Add the following to your Emacs initialization file:

@lisp
(add-to-list 'load-path "/path/to/instapapier")
(require 'instapapier)
@end lisp
@end enumerate

@node Using straight.el
@section Using straight.el

@cindex straight.el

If you use @code{straight.el}, add this to your configuration:

@lisp
(straight-use-package
 '(instapapier :type git :host github
               :repo "barnacleDevelopments/instapapier"))
@end lisp

@node Using use-package
@section Using use-package

@cindex use-package

For @code{use-package} with @code{straight.el}:

@lisp
(use-package instapapier
  :straight (instapapier :type git :host github
                         :repo "barnacleDevelopments/instapapier")
  :commands (instapapier-add-url-at-point
             instapapier-interactively-add-url
             instapapier-add-elfeed-entry-at-point))
@end lisp

@node Spacemacs Installation
@section Spacemacs Installation

@cindex Spacemacs

For Spacemacs users:

@enumerate
@item
Add to your @code{dotspacemacs-additional-packages} in
@code{dotspacemacs/layers}:

@lisp
(defun dotspacemacs/layers ()
  (setq-default
   dotspacemacs-additional-packages
   '((instapapier :location (recipe
                             :fetcher github
                             :repo "barnacleDevelopments/instapapier")))))
@end lisp

@item
Add keybindings in @code{dotspacemacs/user-config}:

@lisp
(defun dotspacemacs/user-config ()
  (spacemacs/set-leader-keys
    "ai a" 'instapapier-add-url-at-point
    "ai u" 'instapapier-interactively-add-url))
@end lisp
@end enumerate

@node Doom Emacs Installation
@section Doom Emacs Installation

@cindex Doom Emacs

For Doom Emacs users:

@enumerate
@item
Add to your @file{packages.el}:

@lisp
;; ~/.doom.d/packages.el
(package! instapapier
  :recipe (:host github :repo "barnacleDevelopments/instapapier"))
@end lisp

@item
Run @command{doom sync} and restart Emacs.
@end enumerate

@node Configuration
@chapter Configuration

@cindex configuration
@cindex authentication
@cindex credentials

Instapapier uses Emacs' built-in @code{auth-source} library for secure
credential management.

@menu
* Setting Up Instapaper::       Creating an Instapaper account
* Configuring Authentication::  Setting up credentials in Emacs
* Testing Authentication::      Verifying your setup
@end menu

@node Setting Up Instapaper
@section Setting Up Instapaper

@cindex account creation
@cindex Instapaper account

If you don't already have an Instapaper account:

@enumerate
@item
Visit @url{https://www.instapaper.com/}
@item
Click ``Sign Up'' in the top right corner
@item
Enter your email address and choose a password
@item
Verify your email address
@end enumerate

@node Configuring Authentication
@section Configuring Authentication

@cindex auth-source
@cindex authinfo
@cindex GPG

You need to add your Instapaper credentials to an @code{auth-source} file.
There are two main options:

@menu
* Plain Text Credentials::      Using ~/.authinfo
* Encrypted Credentials::       Using ~/.authinfo.gpg (recommended)
@end menu

@node Plain Text Credentials
@subsection Plain Text Credentials

@cindex authinfo plain text

Create or edit @file{~/.authinfo} and add:

@example
machine www.instapaper.com login your-email@@example.com password your-password
@end example

@strong{Important:} This file stores credentials in plain text. Secure it with:

@example
chmod 600 ~/.authinfo
@end example

@node Encrypted Credentials
@subsection Encrypted Credentials (Recommended)

@cindex authinfo encrypted
@cindex GPG encryption

For better security, use an encrypted file:

@enumerate
@item
Create or edit @file{~/.authinfo.gpg}

@item
Add the same line as the plain text version:

@example
machine www.instapaper.com login your-email@@example.com password your-password
@end example

@item
Save the file (Emacs will prompt you to encrypt it with GPG)
@end enumerate

Ensure GPG is configured in Emacs:

@lisp
(require 'epa-file)
(epa-file-enable)
@end lisp

@node Testing Authentication
@section Testing Authentication

@cindex testing
@cindex authentication test

After configuring your credentials, verify they work:

@example
M-x instapapier-test-auth
@end example

You should see ``@samp{âœ“ Authentication successful!}'' in the minibuffer.

@node Usage
@chapter Usage

@cindex usage
@cindex commands

Instapapier provides several interactive commands for adding URLs to Instapaper.

@menu
* Adding URLs at Point::        Save URL under cursor
* Adding URLs Interactively::   Enter URL manually
* Keybindings::                 Suggested key configurations
@end menu

@node Adding URLs at Point
@section Adding URLs at Point

@findex instapapier-add-url-at-point
@cindex URL at point

To save a URL located at the cursor position:

@example
M-x instapapier-add-url-at-point
@end example

The command will detect the URL at point and send it to Instapaper.

@strong{Suggested keybinding:}

@lisp
(global-set-key (kbd "C-c i a") 'instapapier-add-url-at-point)
@end lisp

@node Adding URLs Interactively
@section Adding URLs Interactively

@findex instapapier-interactively-add-url
@cindex interactive URL input

To manually enter a URL:

@example
M-x instapapier-interactively-add-url
@end example

You'll be prompted to enter the URL in the minibuffer.

@strong{Suggested keybinding:}

@lisp
(global-set-key (kbd "C-c i u") 'instapapier-interactively-add-url)
@end lisp

@node Keybindings
@section Keybindings

@cindex keybindings
@cindex keyboard shortcuts

Here's a complete keybinding configuration:

@lisp
(global-set-key (kbd "C-c i a") 'instapapier-add-url-at-point)
(global-set-key (kbd "C-c i u") 'instapapier-interactively-add-url)
@end lisp

Or using @code{use-package}:

@lisp
(use-package instapapier
  :bind (("C-c i a" . instapapier-add-url-at-point)
         ("C-c i u" . instapapier-interactively-add-url)))
@end lisp

@node Integrations
@chapter Integrations

@cindex integrations
@cindex elfeed

Instapapier integrates seamlessly with other Emacs packages.

@menu
* Elfeed Integration::          Saving RSS feed entries
@end menu

@node Elfeed Integration
@section Elfeed Integration

@cindex elfeed
@cindex RSS feeds
@findex instapapier-add-elfeed-entry-at-point

Elfeed is a popular RSS feed reader for Emacs. Instapapier provides direct
integration to save feed entries to Instapaper.

@subsection Setting Up Elfeed

First, install and configure elfeed:

@lisp
(use-package elfeed
  :ensure t
  :config
  (setq elfeed-feeds
        '("https://planet.emacslife.com/atom.xml"
          "https://sachachua.com/blog/feed/")))
@end lisp

@subsection Adding Elfeed Entries to Instapaper

In the elfeed search buffer, place your cursor on an entry and run:

@example
M-x instapapier-add-elfeed-entry-at-point
@end example

@strong{Suggested configuration:}

@lisp
(use-package elfeed
  :ensure t
  :bind (:map elfeed-search-mode-map
              ("i" . instapapier-add-elfeed-entry-at-point))
  :config
  (setq elfeed-feeds
        '("https://planet.emacslife.com/atom.xml"
          "https://sachachua.com/blog/feed/")))
@end lisp

Now you can press @kbd{i} on any entry in elfeed to save it to Instapaper.

@node Troubleshooting
@chapter Troubleshooting

@cindex troubleshooting
@cindex debugging
@cindex problems

@menu
* Authentication Issues::       Fixing authentication problems
* Credential Issues::           auth-source not finding credentials
* GPG Issues::                  Problems with encrypted credentials
* Network Issues::              Connection problems
@end menu

@node Authentication Issues
@section Authentication Issues

@cindex authentication failed

If you see ``@samp{âœ— Authentication failed}'':

@enumerate
@item
Verify your credentials in @file{~/.authinfo} or @file{~/.authinfo.gpg}

@item
Ensure you're using your actual Instapaper email and password

@item
Run @code{M-x instapapier-test-auth} to test authentication

@item
Check that the machine name is exactly @code{www.instapaper.com}

@item
Verify the format is: @code{machine www.instapaper.com login EMAIL password PASSWORD}
@end enumerate

@node Credential Issues
@section Credential Issues

@cindex auth-source configuration

If auth-source can't find your credentials, ensure it's configured correctly:

@lisp
(setq auth-sources '("~/.authinfo.gpg" "~/.authinfo"))
@end lisp

Check which files auth-source is searching:

@lisp
(message "auth-sources: %s" auth-sources)
@end lisp

@node GPG Issues
@section GPG Issues

@cindex GPG problems
@cindex encryption issues

If you have trouble with @file{.authinfo.gpg}:

@enumerate
@item
Ensure GPG is installed:

@example
gpg --version
@end example

@item
Configure EPA (EasyPG) in Emacs:

@lisp
(require 'epa-file)
(epa-file-enable)
@end lisp

@item
Test decryption by opening @file{~/.authinfo.gpg} in Emacs
@end enumerate

@node Network Issues
@section Network Issues

@cindex network problems
@cindex connection issues

If you experience network problems:

@enumerate
@item
Check your internet connection

@item
Enable debug logging:

@lisp
(setq url-debug t)
@end lisp

@item
Check the @file{*URL-DEBUG*} buffer for detailed error messages

@item
Verify you can reach Instapaper:

@example
curl -I https://www.instapaper.com/api/authenticate
@end example
@end enumerate

@node API Reference
@chapter API Reference

@cindex API reference
@cindex functions
@cindex variables

@menu
* Interactive Functions::       User-facing commands
* Internal Functions::          Implementation details
* Variables::                   Configuration variables
@end menu

@node Interactive Functions
@section Interactive Functions

@findex instapapier-add-url-at-point
@deffn Command instapapier-add-url-at-point

Add the URL at point to Instapaper. Detects the URL under the cursor
using @code{thing-at-point} and sends it to your Instapaper account.

This is an interactive command that can be invoked with @kbd{M-x}.

@strong{Example:}
@example
M-x instapapier-add-url-at-point
@end example
@end deffn

@findex instapapier-interactively-add-url
@deffn Command instapapier-interactively-add-url url

Prompt for a URL and add it to Instapaper. You'll be asked to enter the
URL in the minibuffer.

This is an interactive command that can be invoked with @kbd{M-x}.

@strong{Arguments:}
@table @var
@item url
The URL to add to Instapaper (prompted interactively).
@end table

@strong{Example:}
@example
M-x instapapier-interactively-add-url RET
https://example.com/article RET
@end example
@end deffn

@findex instapapier-add-elfeed-entry-at-point
@deffn Command instapapier-add-elfeed-entry-at-point

Add the elfeed entry at point to Instapaper. This command should be used
in the elfeed search buffer. It extracts the URL from the selected feed
entry and sends it to Instapaper.

Requires the @code{elfeed} package to be installed.

This is an interactive command that can be invoked with @kbd{M-x}.

@strong{Example:}
@example
;; In elfeed-search-mode buffer
M-x instapapier-add-elfeed-entry-at-point
@end example
@end deffn

@findex instapapier-test-auth
@deffn Command instapapier-test-auth

Test authentication with Instapaper. Sends a request to the Instapaper
authentication endpoint and displays whether authentication succeeded.

This is useful for verifying your credentials are configured correctly.

This is an interactive command that can be invoked with @kbd{M-x}.

@strong{Returns:}
Displays a message indicating success or failure.

@strong{Example:}
@example
M-x instapapier-test-auth
;; => "âœ“ Authentication successful!"
@end example
@end deffn

@node Internal Functions
@section Internal Functions

@findex instapapier-add-url
@defun instapapier-add-url url

Internal function to add a URL to Instapaper. This is the core function
that handles authentication, API communication, and error handling.

@strong{Arguments:}
@table @var
@item url
The URL string to add to Instapaper.
@end table

@strong{Returns:}
The response buffer on success, or @code{nil} on error.

@strong{HTTP Status Codes:}
@table @code
@item 201
Successfully added URL
@item 400
Bad request (invalid URL format)
@item 403
Authentication failed
@end table

This function is not interactive and is meant to be called by other
Instapapier commands.
@end defun

@node Variables
@section Variables

@defvar instapapier-api-url
The base URL for the Instapaper API add endpoint.

@strong{Default value:}
@code{"https://www.instapaper.com/api/add"}

This variable should not normally need to be changed.
@end defvar

@node Index
@unnumbered Index

@printindex cp

@bye